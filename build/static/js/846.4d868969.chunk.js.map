{"version":3,"file":"static/js/846.4d868969.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/AccountCircleOutlined.js","pages/Profile.js","../node_modules/@mui/icons-material/esm/ArrowBack.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM7.35 18.5C8.66 17.56 10.26 17 12 17s3.34.56 4.65 1.5c-1.31.94-2.91 1.5-4.65 1.5s-3.34-.56-4.65-1.5zm10.79-1.38C16.45 15.8 14.32 15 12 15s-4.45.8-6.14 2.12C4.7 15.73 4 13.95 4 12c0-4.42 3.58-8 8-8s8 3.58 8 8c0 1.95-.7 3.73-1.86 5.12z\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 6c-1.93 0-3.5 1.57-3.5 3.5S10.07 13 12 13s3.5-1.57 3.5-3.5S13.93 6 12 6zm0 5c-.83 0-1.5-.67-1.5-1.5S11.17 8 12 8s1.5.67 1.5 1.5S12.83 11 12 11z\"\n}, \"1\")], 'AccountCircleOutlined');","import React, { useContext, useEffect, useState } from \"react\";\nimport bgImg from \"../images/profile-background.png\";\nimport { AccountCircleOutlined, ArrowBack } from \"@mui/icons-material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Modal, TextField } from \"@mui/material\";\nimport { UserContext } from \"../context/UserContext\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport Navbar from \"../components/Navbar\";\nimport Upload from \"../components/Upload\";\n\nconst Profile = () => {\n  const [openModal, setModalOpen] = useState(false);\n\n  const {\n    updateUserProfile,\n    getUserProfile,\n    getUserRole,\n    userProfile,\n    setUserProfile,\n    profileUpdated,\n  } = useContext(UserContext);\n\n  const { logout } = useContext(AuthContext);\n\n  const handleModalOpen = () => setModalOpen(true);\n  const handleModalClose = () => setModalOpen(false);\n\n  useEffect(() => {\n    getUserProfile();\n  }, [profileUpdated]);\n\n  const navigate = useNavigate();\n  return (\n    <div\n      className=\"w-full h-screen flex justify-center\"\n      //   style={{\n      //     backgroundImage: `url(${bgImg})`,\n      //     backgroundRepeat: \"no-repeat\",\n      //     backgroundSize: \"100% 100%\",\n      //   }}\n    >\n      <Navbar handleOpen={handleModalOpen} />\n      <div className=\"pt-28\">\n        <div className=\"flex gap-6\">\n          <ArrowBack\n            fontSize=\"large\"\n            className=\"border-2 border-gray-400 rounded-full text-gray-500 cursor-pointer\"\n            onClick={() => navigate(-1)}\n          />\n          <div className=\"text-2xl font-semibold text-gray-600\">Profile</div>\n        </div>\n        <hr className=\"mb-16 mt-5\" />\n        <div className=\"flex gap-20 px-10\">\n          <div className=\"w-[120px] h-[120px] border rounded-full mb-5\">\n            {userProfile.profileUrl ? (\n              <img\n                src={userProfile.profileUrl}\n                className=\"w-full h-full object-cover rounded-full\"\n                alt=\"\"\n              />\n            ) : (\n              <AccountCircleOutlined\n                style={{ fontSize: 120 }}\n                className=\"text-[#8d86db]\"\n              />\n            )}\n          </div>\n          <div>\n            <div className=\"mb-6\">\n              <TextField\n                id=\"name\"\n                className=\"w-[300px]\"\n                label=\"Name\"\n                variant=\"outlined\"\n                name=\"name\"\n                InputLabelProps={{\n                  shrink: userProfile.name && true,\n                }}\n                value={userProfile.name}\n                onChange={(e) =>\n                  setUserProfile({ ...userProfile, name: e.target.value })\n                }\n              />\n            </div>\n            <div className=\"mb-6\">\n              <TextField\n                id=\"email\"\n                className=\"w-[300px]\"\n                label=\"Email\"\n                variant=\"outlined\"\n                name=\"email\"\n                InputLabelProps={{\n                  shrink: userProfile.email && true,\n                }}\n                value={userProfile.email}\n                onChange={(e) =>\n                  setUserProfile({ ...userProfile, email: e.target.value })\n                }\n              />\n            </div>\n            <div className=\"mb-6\">\n              <TextField\n                id=\"phone\"\n                className=\"w-[300px]\"\n                label=\"Phone\"\n                variant=\"outlined\"\n                name=\"phone\"\n                InputLabelProps={{\n                  shrink: userProfile.phoneNumber && true,\n                }}\n                value={userProfile.phoneNumber}\n                onChange={(e) =>\n                  setUserProfile({\n                    ...userProfile,\n                    phoneNumber: e.target.value,\n                  })\n                }\n              />\n            </div>\n            <div className=\"mb-6\">\n              <TextField\n                multiline\n                minRows={2}\n                maxRows={4}\n                id=\"bio\"\n                className=\"w-[300px]\"\n                label=\"Bio\"\n                variant=\"outlined\"\n                name=\"bio\"\n                InputLabelProps={{\n                  shrink: userProfile.bio && true,\n                }}\n                value={userProfile.bio}\n                onChange={(e) => {\n                  console.log(\"new data \", {\n                    ...userProfile,\n                    bio: e.target.value,\n                  });\n                  setUserProfile({ ...userProfile, bio: e.target.value });\n                }}\n              />\n            </div>\n            <div className=\"mb-2\">\n              <Button\n                className=\"w-[300px]\"\n                variant=\"contained\"\n                onClick={() => updateUserProfile()}\n              >\n                Update\n              </Button>\n            </div>\n            <div className=\"w-full flex justify-end mt-4\">\n              <p\n                className=\"w-20 py-1 text-center text-red-500 font-semibold cursor-pointer hover:bg-red-100 rounded\"\n                onClick={() => {\n                  logout();\n                  navigate(\"/\");\n                }}\n              >\n                Logout\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Modal open={openModal} onClose={handleModalClose}>\n        <Upload handleModalClose={handleModalClose} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Profile;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');"],"names":["createSvgIcon","_jsx","d","_useState","useState","_useState2","_slicedToArray","openModal","setModalOpen","_useContext","useContext","UserContext","updateUserProfile","getUserProfile","userProfile","getUserRole","setUserProfile","profileUpdated","logout","AuthContext","handleModalClose","useEffect","navigate","useNavigate","_jsxs","className","children","Navbar","handleOpen","ArrowBack","fontSize","onClick","profileUrl","src","alt","AccountCircleOutlined","style","TextField","id","label","variant","name","InputLabelProps","shrink","value","onChange","e","_objectSpread","target","email","phoneNumber","multiline","minRows","maxRows","bio","console","log","Button","Modal","open","onClose","Upload"],"sourceRoot":""}